** Notation:
  --> Input
  => Output

** echo => print

--> echo "Hello, Git"
=> Hello, Git

--> echo "Hello, Git" | git hash-object --stdin
=> Address_1 (Hexadecimal)

--> echo "Hello, Git" | shasum
=> Address_2 (Hexadecimal)

--> echo "blob 11\0Hello, Git"
=> blob 11\0Hello, Git

--> echo -e "blob 11\0Hello, Git"
=> blob 11Hello, Git

--> echo -e "blob 11\0Hello, Git"  | shasum
=> Address_1 (Hexadecimal)

** Git read the value with {blob (#_of_char+1)\0}

** To save the change in the file
===> git add 
===> git commit

===> clear # clear all comments

** User Information --> ~/.gitconfig
===> git config --global user.name "Hope Mashal"
===> git config --global user.email "mashal.hope@gmail.com"

===> git config --list
user.name=Hope Mashal
user.email=mashal.hope@gmail.com

===>mkdir gitwork #create folder
===> cd gitwork/ #open folder
===> ls #list of files in this folder
===> echo "Hello, Git" >> file.txt #write "Hello, Git" in file
===> cat file.txt #read the file
Hello, Git
===> ls -al #list of files in this folder with rwx values

** Open the folder, you want to push it --> cd folder_path 
* cd.. --> Go to the folder that contains this folder 

===> git clone folder_link.git

===> git init #Git repo
===> git status #Show the folder state & Branch --> بنشوف حالة الفايل اذا مرفوع او لا واذا في تغييرات
===> git status -s #بختصر الرسالة السابقة

===> git add . #Add all files
===> git add * #Add all files
===> git add file_name.file_type
===> git add *.txt   #Add all text files

===> git commit -m 'your_msg' #Add commit text (new version --> (blobs and trees and parents) & date & user information) -> (commit => tree => parent => blobs)
===> git log #Repo(Commit) History

===> git diff #Show the difference in all files (between unstage and index(stage))
===> git diff --staged #Show the difference in all files (between index(stage) and repo)

===> git push #Push your files from your computer to internet
===> git pull #Pull the files from internet to your computer

===> git config --global core.editor "vim"
===> git commit --> You can type any comments here!!
===> git log
===> git log --oneline
===> git log --oneline file_name.file_type #Filter all commit for this file
===> git log --oneline -2 #Get the last two commits
===> git log --oneline --graph

===> git show commit_sha #Show the difference and commit msg

===> git log --oneline --graph
===> git diff commit#1_sha..commit#2_sha #Show the difference between two commits

===> git rm --cached <file>.. ---> to unstage (بشيله من الريبو)


** Extra
===> git ls-files # See the files in git repo
===> git ls-files -s # See the files in git repo with shasum
===> find .git/objects/ -type f #find file in .git/objects/
===> git cat-file -t Address_1 --> Output is: blob
===> git cat-file -s Address_1 --> Output is: 11 (size)
===> git cat-file -p Address_1 --> Output is: Hello, Git